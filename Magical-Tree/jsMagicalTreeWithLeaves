var n = 0;
var bg;
var tree;
var minHue;
var maxHue;
var leafs = [];

function setup() {
	createCanvas(900, 700);
	colorMode(HSB);
	noLoop();
	noStroke();

	createBackground();
	tree = createGraphics(width, height);
}

function draw() {
	image(bg, 0, 0);
	createTree();
	setHue();
	image(tree, 0, 0);
	ground();
}

function mousePressed() {
	redraw();
}

function createBackground() {
	bg = createGraphics(width, height);
	bg.beginShape();
	bg.noStroke();
	var diam;
	for (diam = 1.5 * width; diam > 0.5 * width; diam -= 20) {
		bg.fill(map(diam, 0.5 * width, 1.5 * width, 255, 210));
		bg.ellipse(width / 2, height / 2, diam, diam);
	}
	bg.endShape();
}

function setHue() {
	var rdn0 = random(255);
	var rdn1 = random(255);
	minHue = min(rdn0, rdn1);
	maxHue = max(rdn0, rdn1);
}

function createTree() {
	tree.beginShape();
	tree.noStroke();
	tree.background(0, 0);
	var i;
	for (i = 0; i < 3; i++) {
		tree.fill(map(i, 0, 2, 60, 20));
		branch(width / 2, height, 70, -HALF_PI, 150, 0);
	}
	tree.endShape();
}

function branch(x, y, bSize, theta, bLength, pos) {
	n += 0.01;
	var diam;
	diam = lerp(bSize, 0.7 * bSize, pos / bLength);
	diam *= map(noise(n), 0, 1, 0.4, 1.6);

	tree.ellipse(x, y, diam, diam);
	if (bSize > 0.6) {
		if (pos < bLength) {
			x += cos(theta + random(-PI / 10, PI / 10));
			y += sin(theta + random(-PI / 10, PI / 10));
			branch(x, y, bSize, theta, bLength, pos + 1);
		} else {
			leafs.push(createVector(x, y));
			var drawLeftBranch = random(1) > 0.1;
			var drawRightBranch = random(1) > 0.1;
			if (drawLeftBranch) branch(x, y, random(0.5, 0.7) * bSize, theta - random(PI / 15, PI / 5), random(0.6, 0.8) * bLength, 0);
			if (drawRightBranch) branch(x, y, random(0.5, 0.7) * bSize, theta + random(PI / 15, PI / 5), random(0.6, 0.8) * bLength, 0);

			if (!drawLeftBranch && !drawRightBranch) {
				tree.push()
				tree.translate(x, y);
				tree.rotate(theta);
				tree.quad(0, -diam / 2, 2 * diam, -diam / 6, 2 * diam, diam / 6, 0, diam / 2);
				tree.pop();
			}
		}
	}
}

function drawLeafs(minDiam, maxDiam, minAlpha, maxAlpha) {
	var i;
	for (i = 0; i < leafs.length(); i++) {
		var h = map(i, 0, leafs.length(), minHue, maxHue);
		var s = 255;
		var b = 255;
		var a = random(minAlpha, maxAlpha);
		fill(h, s, b, a);
		var diam = random(minDiam, maxDiam);
		var jitterX = random(-30, 30);
		var jitterY = random(-30, 30);
		ellipse(leafs[i].x + jitterX, leafs[i].y + jitterY, diam, diam);
	}
}

function ground() {
	fill(20);
	beginShape();
	vertex(0, height);
	var i;
	for (i = 0; i <= width; i += 50) {
		vertex(i, map(noise(n), 0, 1, height - 30, height));
		n += 0.1;
	}
	vertex(width, height);
	endShape();
}
